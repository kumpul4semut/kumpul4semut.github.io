import type { Storage } from 'unstorage';
import type { generateFallbackFontFace } from './metrics.js';
import type { PreloadData, ResolvedFontFamily } from './types.js';
import { type GetMetricsForFamily } from './utils.js';
interface Options {
    base: string;
    families: Array<ResolvedFontFamily>;
    storage: Storage;
    hashToUrlMap: Map<string, string>;
    resolvedMap: Map<string, {
        preloadData: PreloadData;
        css: string;
    }>;
    hashString: (value: string) => string;
    log: (message: string) => void;
    generateFallbackFontFace: typeof generateFallbackFontFace;
    getMetricsForFamily: GetMetricsForFamily;
}
export declare function loadFonts({ base, families, storage, hashToUrlMap, resolvedMap, hashString, generateFallbackFontFace, getMetricsForFamily, log, }: Options): Promise<void>;
export {};
