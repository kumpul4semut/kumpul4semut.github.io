---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import { getCollection } from 'astro:content';

type Props = CollectionEntry<"blog">["data"];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;

const produkList = await getCollection('produk');
---

<html lang="en" class="scroll-smooth bg-white dark:bg-gray-900">
  <head>
    <BaseHead title={title} description={description} />
  </head>
  <body class="text-gray-900 dark:text-gray-100 font-sans leading-relaxed">
    <Header />
    <main class="container mx-auto px-4 md:px-8 py-10">
      <div class="grid grid-cols-1 md:grid-cols-4 gap-8">
        <!-- Main article -->
        <article
          id="content"
          class="prose max-w-none dark:prose-invert border border-gray-300 dark:border-gray-700 rounded-2xl p-8 shadow-lg transition-shadow duration-300 hover:shadow-xl md:col-span-3"
          style="max-width: 1200px; width: 100%;"
        >
          <h1 class="text-4xl font-extrabold text-center md:text-left mb-4">{title}</h1>
          <div class="flex flex-col md:flex-row md:items-center md:justify-between mb-6 text-sm text-gray-600 dark:text-gray-400">
            <FormattedDate date={pubDate} />
            {updatedDate && (
              <span class="mt-2 md:mt-0 text-gray-500 dark:text-gray-400 italic">
                Updated: <FormattedDate date={updatedDate} />
              </span>
            )}
          </div>
          {heroImage && (
            <div class="mb-6 flex justify-center">
              <img
                class="rounded-xl max-w-full h-auto shadow-md"
                src={heroImage}
                alt={title}
                loading="lazy"
              />
            </div>
          )}
          <div class="text-lg leading-relaxed">
            <slot />
          </div>
        </article>

        <!-- Sidebar -->
        <aside class="px-4 sm:px-6 rounded-2xl bg-gray-50 dark:bg-gray-800 shadow-md">
          <h2 class="text-2xl font-semibold mb-6 text-center">Rayapan Produk</h2>
          {
            produkList.slice(0, 5).map((product: any) => (
              <a
                href={product.data.checkoutUrl}
                class="block cursor-pointer mb-4"
                target="_blank"
                rel="noopener noreferrer"
              >
                <div
                  class="w-full max-w-xs mx-auto border-2 border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 rounded-xl overflow-hidden hover:shadow-lg transition-transform duration-200 hover:scale-105"
                >
                  <div class="relative">
                    <img
                      src={product.data.image}
                      alt={product.data.title}
                      class="w-full h-40 object-cover bg-[#3b82f6]"
                      loading="lazy"
                    />
                  </div>
                  <div class="p-4">
                    <h3
                      class="text-gray-900 dark:text-gray-100 text-base mb-2 line-clamp-2"
                    >
                      {product.data.title}
                    </h3>
                    <div class="flex items-baseline gap-2">
                      <span
                        class="text-[#3b82f6] text-lg font-semibold"
                        >Rp{product.data.price.toLocaleString('id-ID')}</span
                      >
                      {product.data.discount && (
                        <span class="text-gray-600 dark:text-gray-400 text-sm line-through"
                          >Rp{product.data.discount.toLocaleString('id-ID')}</span>
                      )}
                    </div>
                  </div>
                </div>
              </a>
            ))
          }
        </aside>
      </div>
    </main>
    <Footer />
    <script type="module">
      window.addEventListener("DOMContentLoaded", () => {
        const content = document.querySelector("#content");
        const codeBlocks = content.querySelectorAll("pre");

        codeBlocks.forEach((pre) => {
          const button = document.createElement("button");
          button.innerText = "Copy";
          button.className =
            "absolute top-2 right-2 bg-gray-800 text-white text-xs px-2 py-1 rounded hover:bg-gray-700";

          // Ensure parent is relative so button is positioned correctly
          pre.classList.add("relative");
          pre.appendChild(button);

          button.addEventListener("click", () => {
            const code = pre.querySelector("code");
            navigator.clipboard
              .writeText(code.innerText)
              .then(() => {
                button.innerText = "Copied!";
                setTimeout(() => {
                  button.innerText = "Copy";
                }, 2000);
              })
              .catch((err) => console.error("Failed to copy:", err));
          });
        });
      });
    </script>
  </body>
</html>
